scalar Time

type Account{
    id : String!
    name: String!
    orders: [Order!]!
}

type Product{
    id: String!
    name: String!
    descripiton: String!
    price: Float!
}

type Order{
    id: String!
    createdAt: Time!
    totalPrice: Float!
    p0roducts: [OrderedProduct!]!
}

type OrderedProduct{
    id: String!
    name: String!
    descripiton: String!
    price: Float!
    quantity: Int!
}

input PaginationInput{
    skip: Int!
    take: Int!
}

input AccountInput{
    name: String!
}

input ProductInput{
    name: String!
    descripiton: String!
    price: Float!
}

input OrderProductInput{
    productId: String!
    quantity: Int!
}

input OrderInput{
    accountId: String!
    products: [OrderProductInput!]
}

type Mutation{
    createAccount(account: AccountInput!): Account
    createProduct(product: ProductInput!): Product
    createOrder(order: OrderInput!): Order
}

type Query{
    accounts(pagination: PaginationInput, id: String): [Account!]!
    products(pagination: PaginationInput, query: String, id: String): [Product!]!
}